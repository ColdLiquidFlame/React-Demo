{"version":3,"sources":["TaxCalculator.js","OpenWeather.js","Weather.js","App.js","serviceWorker.js","index.js"],"names":["TaxCalculator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubTotalChange","e","preventDefault","setState","subTotal","target","value","calculateTax","handleTaxChange","tax","console","log","state","total","toFixed","react_default","a","createElement","Fragment","className","htmlFor","id","type","placeholder","onChange","Component","OpenWeather","getCurrentWeather","_ref","asyncToGenerator","regenerator_default","mark","_callee","zipCode","url","resp","jsonResult","wrap","_context","prev","next","concat","fetch","sent","json","abrupt","currentTemp","main","temp","cityName","name","weatherIcon","weather","icon","weatherDescription","description","stop","_x","apply","arguments","Weather","handleZipInputChange","isNaN","Number","handleZipButtonClick","isValidZipCode","hasWeather","maxLength","onClick","disabled","length","style","width","textAlign","src","alt","App","components","push","src_TaxCalculator","src_Weather","listOfComponents","map","x","i","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cee0f22e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaxCalculator extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { subTotal: 0, tax: 0.0825, total: 0 };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Tax Calculator</h1>\r\n                <div className=\"container\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"sub_total\">Sub-total</label>\r\n                        <input id=\"sub_total\" type=\"number\" className=\"form-control\" placeholder=\"Enter sub-total ($)\" value={this.state.subTotal} onChange={this.handleSubTotalChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"tax\">Tax</label>\r\n                        <input id=\"tax\" type=\"number\" className=\"form-control\" placeholder=\"tax ($)\" value={this.state.tax} onChange={this.handleTaxChange} />\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"container\">\r\n                    <h6>Total: ${this.state.total}</h6>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    handleSubTotalChange = (e) => {\r\n        e.preventDefault()\r\n        this.setState({ subTotal: e.target.value });\r\n        this.calculateTax(e);\r\n    }\r\n\r\n    handleTaxChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ tax: e.target.value });\r\n        this.calculateTax(e);\r\n    }\r\n\r\n    calculateTax = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Calculating tax...\");\r\n\r\n        this.setState((state) => {\r\n            let total = (state.subTotal * (1 + state.tax)).toFixed(2);\r\n            console.log(\"SubTotal: \" + state.subTotal + \" | Tax: \" + state.tax + \" | Total: \" + total);\r\n            return { total };\r\n        });\r\n    }\r\n}\r\n\r\nexport default TaxCalculator;","const apiKey = \"3048efce07f6fa30b19a517e5e1ce2ca\";\r\nconst currentWeatherUrl = \"http://api.openweathermap.org/data/2.5/weather\";\r\nconst units = \"imperial\";\r\nconst iconUrl = \"http://openweathermap.org/img/w\";\r\nconst iconExt = \"png\";\r\n\r\nconst getCurrentWeather = async (zipCode) => {\r\n    const url = `${currentWeatherUrl}?units=${units}&zip=${zipCode},us&apiKey=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const jsonResult = await resp.json();\r\n\r\n    return {\r\n        currentTemp: jsonResult.main.temp,\r\n        cityName: jsonResult.name,\r\n        weatherIcon: `${iconUrl}/${jsonResult.weather[0].icon}.${iconExt}`,\r\n        weatherDescription: jsonResult.weather[0].description\r\n    };\r\n};\r\n\r\nconst OpenWeather = {    \r\n    getCurrentWeather\r\n}\r\n\r\nexport { OpenWeather };","import React, { Component } from 'react';\r\nimport { OpenWeather } from './OpenWeather';\r\n\r\nclass Weather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {zipCode: '', weather: null, isValidZipCode: false};\r\n    }    \r\n\r\n    render() {\r\n        const hasWeather = this.state.weather !== null;\r\n        return (\r\n            <>\r\n                <h1>Weather App</h1>\r\n                <div className=\"container\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"zip\">Zip code</label>\r\n                        <input id=\"zip\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter zip code\"\r\n                            onChange={this.handleZipInputChange}\r\n                            value={this.state.zipCode}\r\n                            maxLength=\"5\" />\r\n                    </div>\r\n                    <button className=\"btn btn-primary\"\r\n                         type=\"button\"\r\n                         onClick={this.handleZipButtonClick}\r\n                         disabled={this.state.zipCode.length !== 5}\r\n                    >Search</button>\r\n                </div>\r\n                { hasWeather &&\r\n                <div className=\"container mt-3\">\r\n                    <div className=\"card shadow p-3\" style={{width: \"12em\"}}>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm\" style={{textAlign: \"center\"}}>\r\n                                    <h6>{this.state.weather.cityName}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm\" style={{textAlign: \"center\"}}>\r\n                                    <img className=\"align-middle\" src={this.state.weather.weatherIcon} alt={this.state.weather.weatherDescription} style={{width: \"5em\"}} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm\" style={{textAlign: \"center\"}}>\r\n                                    {this.state.weather.currentTemp.toFixed(0)} &deg;F\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> }\r\n            </>\r\n        );\r\n    }\r\n\r\n    handleZipInputChange = (e) => {        \r\n        if(isNaN(Number(e.target.value))) {\r\n            return;\r\n        }\r\n\r\n        this.setState({zipCode: e.target.value});\r\n    }\r\n\r\n    handleZipButtonClick = async () => {    \r\n        const weather = await OpenWeather.getCurrentWeather(this.state.zipCode);\r\n\r\n        this.setState({weather: weather}); \r\n    }\r\n}\r\n\r\nexport default Weather;","import React, { Component } from 'react';\nimport TaxCalculator from './TaxCalculator';\nimport Weather from './Weather';\n//import ChatClient from './ChatClient';\n\nclass App extends Component {\n  render() {\n    const components = [];\n    components.push(<TaxCalculator />);\n    components.push(<Weather />);\n    //components.push(<ChatClient clientNum=\"1\" />);\n    //components.push(<ChatClient clientNum=\"2\" />);\n\n    const listOfComponents = components.map( (x, i) => (\n      <div className=\"col-lg\" key={i}>\n        <div className=\"card shadow sm mb-3\">\n          <div className=\"card-body\">{x}</div>\n        </div>\n      </div>)\n    );\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">{listOfComponents}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}